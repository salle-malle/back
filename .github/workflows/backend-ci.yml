name: backend-ci

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      COOL_SMS_API_KEY: ${{ secrets.COOL_SMS_API_KEY }}
      COOL_SMS_SECRET_KEY: ${{ secrets.COOL_SMS_SECRET_KEY }}
      COOL_SMS_FROM: ${{ secrets.COOL_SMS_FROM }}
      DB_DRIVER_CLASS_NAME: ${{ secrets.DB_DRIVER_CLASS_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_URL: ${{ secrets.DB_URL }}
      DB_USER_NAME: ${{secrets.DB_USER_NAME}}
      JWT_SECRET : ${{secrets.JWT_SECRET}}
      JWT_ISSUER : ${{secrets.JWT_ISSUER}}
      OPEN_AI_API_KEY : ${{secrets.OPEN_AI_API_KEY}}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew  # Gradle 실행 권한 부여

      - name: Build with Gradle
        run: ./gradlew build --no-daemon --stacktrace --info

      - name: Run Tests
        run: ./gradlew test || exit 1

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/reports/tests/
